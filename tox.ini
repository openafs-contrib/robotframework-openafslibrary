[tox]
minversion = 4.11.4
env_list =
    # py27-rf413
    # py{36,37}-rf611
    py{38,39,310,311,312}-rf611
    py{38,39,310,311,312}-rf700

#
# Usage:  tox [-e <enviroment>] [-- <pytest-options>]
#         tox -l  # to list environments
#
[testenv]
description = Run the tests
package = wheel
wheel_build_env = .pkg
deps =
    py27-rf413: robotframework==4.1.3
    py{36,37}-rf611: robotframework==6.1.1
    py{38,39,310,311,312}-rf611: robotframework==6.1.1
    py{38,39,310,311,312}-rf700: robotframework==7.0.0
commands =
	python --version
    python -c 'import OpenAFSLibrary; print(OpenAFSLibrary.__version__)'

#
# Usage:  tox -e dev
#
# To activate the development environment:
#
#    deactivate
#    source .tox/dev/bin/activate
#
# Then run molecule in the tests directory:
#
#    cd tests
#    BOX=<box> BOX_VERSION=<version> molecule test [-s <scenario>]
#    cd ..
#
# Or run the tests with pytest:
#
#    pytest --co tests            # list tests
#    pytest -v [-k <pattern>] tests # run tests
#
[testenv:dev]
description = Development environment
basepython = python3.12
usedevelop = True
deps =
    pytest==7.4.4
    robotframework==7.0.0
commands =

#
# Usage:  tox -e format
#
[testenv:format]
description = Reformat code
basepython = python3.11
deps =
    black==25.1.0
commands =
    black OpenAFSLibrary

#
# Usage:  tox -e lint
#
[testenv:lint]
description = Run static checks
basepython = python3.11
deps =
    flake8==7.0.0
    pyflakes==3.2.0
commands =
    pyflakes OpenAFSLibrary
    flake8 OpenAFSLibrary

#
# Usage:  tox -e docs
#
[testenv:docs]
description = Build documentation
basepython = python3.11
changedir = docs
deps =
    Sphinx==7.2.6
    sphinx-rtd-theme==2.0.0
commands =
    sphinx-build -M html source build

#
# Usage:  tox -e build
#
[testenv:build]
basepython = python3.11
deps =
    build==1.0.3
    twine==6.1.0
commands =
    python -m build
    twine check dist/*

#
# Usage:  tox -e release
#
# Note: Set TWINE env vars or ~/.pypirc before running.
#
[testenv:release]
basepython = python3.11
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY_URL
deps =
    build==1.0.3
    twine==6.1.0
commands =
    python -m build
    twine check dist/*
    twine upload --repository robotframework-openafslibrary --skip-existing dist/*
